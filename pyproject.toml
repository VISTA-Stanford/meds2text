[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.0", "wheel"]

[project]
authors = [
  {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Healthcare Industry",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "pandas>=1.5.0",
  "polars>=0.19.0",
  "pyarrow>=10.0.0",
  "lxml>=4.9.0",
  "python-dateutil>=2.8.0",
  "marisa-trie>=1.1.0",
  "numpy>=1.21.0",
  "pytest>=7.0.0",
  "networkx>=3.0.0",
  "matplotlib>=3.5.0",
  "meds-reader",
  "gradio>=4.0.0",
]
description = "Transforms MEDS-formatted data to textual representations"
keywords = ["meds", "healthcare", "data-transformation", "text-generation", "omop", "fhir"]
license = {text = "MIT"}
maintainers = [
  {name = "Your Name", email = "your.email@example.com"},
]
name = "meds2text"
readme = "README.md"
requires-python = ">=3.8"
version = "0.1.0"

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "pytest-cov>=4.0.0",
  "black>=23.0.0",
  "isort>=5.12.0",
  "flake8>=6.0.0",
  "mypy>=1.0.0",
  "pre-commit>=3.0.0",
]
docs = [
  "sphinx>=6.0.0",
  "sphinx-rtd-theme>=1.2.0",
  "myst-parser>=1.0.0",
]
test = [
  "pytest>=7.0.0",
  "pytest-cov>=4.0.0",
  "pytest-mock>=3.10.0",
]

[project.urls]
"Bug Tracker" = "https://github.com/yourusername/meds-textify/issues"
Documentation = "https://meds-textify.readthedocs.io/"
Homepage = "https://github.com/yourusername/meds-textify"
Repository = "https://github.com/yourusername/meds-textify.git"

[project.scripts]
meds-textify = "meds2text.textify:main"

[tool.setuptools.packages.find]
include = ["meds2text*"]
where = ["src"]

[tool.setuptools.package-data]
meds2text = ["resources/*"]

[tool.black]
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
include = '\.pyi?$'
line-length = 88
target-version = ['py38']

[tool.isort]
known_first_party = ["meds2text"]
line_length = 88
multi_line_output = 3
profile = "black"

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
python_version = "3.8"
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "pandas.*",
  "polars.*",
  "pyarrow.*",
  "lxml.*",
  "dateutil.*",
  "marisa_trie.*",
  "meds_reader.*",
  "starrforge.*",
]

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers --strict-config"
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests",
]
minversion = "7.0"
python_classes = ["Test*"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
testpaths = ["tests"]

[tool.coverage.run]
omit = [
  "*/tests/*",
  "*/test_*",
  "*/__pycache__/*",
  "*/venv/*",
  "*/env/*",
]
source = ["meds2text"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "if settings.DEBUG",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]
